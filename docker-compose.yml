version: '2.1'
services:

  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

  db:
    image: mysql:5.7
    volumes:
      - '/datadrive/mysql:/var/lib/mysql'
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=notification_center_prod
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - '3306:3306'
    healthcheck:
      test: "/etc/init.d/mysql status"
      timeout: 16s
      interval: 5s


  redis:
    image: redis:alpine
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - '/datadrive/redis:/data'
    ports:
      - '6379'

  web:
    depends_on:
      - db
      - redis
    build: ./rails-dashboard
    environment:
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      DB_PRODUCTION_USERNAME: ${MYSQL_USER}
      DB_PRODUCTION_PASSWORD: ${MYSQL_PASSWORD}
      DB_PRODUCTION_HOST: db
      VIRTUAL_HOST: notifications.svteknoloji.website

  api:
    depends_on:
      db:
        condition: service_healthy
    # image: notification-center/go-worker-api
    build: ./go-api-worker
    environment:
      - GIN_MODE=release
      - DB_PRODUCTION_USERNAME=${MYSQL_USER}
      - DB_PRODUCTION_PASSWORD=${MYSQL_PASSWORD}
      - VIRTUAL_HOST=api.svteknoloji.website
    links:
      - redis:redis
      - db

volumes:
  'datadrive':
